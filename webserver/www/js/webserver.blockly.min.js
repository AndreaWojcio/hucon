function newFile(){Blockly.mainWorkspace.clear()}function loadFile(e){var xmlText=e.target.result;xmlText&&(Blockly.mainWorkspace.clear(),xmlDom=Blockly.Xml.textToDom(xmlText),Blockly.Xml.domToWorkspace(Blockly.mainWorkspace,xmlDom)),apendConsoleLog("Blockly workspace loaded from local disk.")}function saveFile(){var xmlDom=Blockly.Xml.workspaceToDom(Blockly.mainWorkspace),xmlText=Blockly.Xml.domToPrettyText(xmlDom);file=new File([xmlText],"HackerSchool-blockly.xml",{type:"text/plain;charset=utf-8"}),saveAs(file),apendConsoleLog("Blockly workspace save on local disk.")}function getPythonCode(){return Blockly.Python.workspaceToCode(blocklyWorkspace)}function onResize(e){var blocklyArea=document.getElementById("blocklyArea"),blocklyDiv=document.getElementById("blocklyDiv"),element=blocklyArea,x=0,y=0;do{x+=element.offsetLeft,y+=element.offsetTop,element=element.offsetParent}while(element);blocklyDiv.style.left=x+"px",blocklyDiv.style.top=y+"px",blocklyDiv.style.width=blocklyArea.offsetWidth+"px",blocklyDiv.style.height=blocklyArea.offsetHeight-20+"px"}function udpateCode(event){var code=Blockly.Python.workspaceToCode(blocklyWorkspace);document.getElementById("pythonCode").value=code}function openLoadDialog(){loadDialog=document.getElementById("loadDialog"),loadDialog.style.display="block"}function loadSelectedFile(){closeLoadDialog();var input,file,fr;"function"==typeof window.FileReader?(input=document.getElementById("fileinput"))?input.files?input.files[0]?(file=input.files[0],(fr=new FileReader).onload=loadFile,fr.readAsText(file)):alert("Please select a file before clicking `Load`"):alert("This browser does not seem to support the `files` property of file inputs."):alert("Um, could not find the fileinput element."):alert("The file API is not supported on this browser yet.")}function closeLoadDialog(){loadDialog=document.getElementById("loadDialog"),loadDialog.style.display="none"}function openConsoleLogDialog(){consoleLogDialog=document.getElementById("consoleLogDialog"),consoleLogDialog.style.display="block"}function closeConsoleLogDialog(){consoleLogDialog=document.getElementById("consoleLogDialog"),consoleLogDialog.style.display="none"}function command(value){if("execute"==value){val=getPythonCode();var xhttp=new XMLHttpRequest;xhttp.onreadystatechange=function(){4==this.readyState&&(200==this.status?apendConsoleLog(this.responseText):alert("Could not set execute the command on the server."))},xhttp.open("POST","__Execute__",!1),xhttp.send(val)}}function apendConsoleLog(message){var time=(new Date).toLocaleTimeString().replace("/.*(d{2}:d{2}:d{2}).*/","$1");document.getElementById("consoleLog").value=time+"\n\n"+message,openConsoleLogDialog()}Blockly.Blocks.machine_pin={init:function(){this.setColour(208),this.appendDummyInput().appendField("pin").appendField(new Blockly.FieldDropdown([["NeoPixel","NEOPIXEL"],["Servo 1","SERVO_1"],["Servo 2","SERVO_2"]]),"MACHINE_PIN_CONSTANT"),this.setOutput(!0,"MachinePin");var thisBlock=this;this.setTooltip(function(){return"get a pin object on "+thisBlock.getFieldValue("MACHINE_PIN_CONSTANT")})}},Blockly.Python.machine_pin=function(block){Blockly.Python.definitions_.import_machine_pin="from machine import Pin as Pin";var code="Pin(";switch(block.getFieldValue("MACHINE_PIN_CONSTANT")){case"NEOPIXEL":code+="14";break;case"SERVO_1":code+="12";break;case"SERVO_2":code+="13"}return code+=")",[code,Blockly.Python.ORDER_ATOMIC]},Blockly.Blocks.machine_sleep={init:function(){this.setColour(208),this.appendDummyInput().appendField("Sleep for").appendField(new Blockly.FieldNumber("100"),"MILLISECONDS").appendField("milliseconds"),this.setPreviousStatement(!0),this.setNextStatement(!0);var thisBlock=this;this.setTooltip(function(){return"Sleep for "+thisBlock.getFieldValue("MILLISECONDS")+"milliseconds."})}},Blockly.Python.machine_sleep=function(block){Blockly.Python.definitions_.import_time="import time";var code="";return code+="time.sleep("+block.getFieldValue("MILLISECONDS")/1e3+")\n"},Blockly.Blocks.neopixel_array={init:function(){this.setColour(208),this.appendValueInput("VAR").setCheck("MachinePin").appendField("create NeoPixel list on"),this.setOutput(!0,"NeoPixelArray"),this.setTooltip(function(){return"Create a NeoPixel List which is conntected to the given pin."})}},Blockly.Python.neopixel_array=function(block){return Blockly.Python.definitions_.import_neopixel="from neopixel import NeoPixel as NeoPixel",["NeoPixel("+(Blockly.Python.valueToCode(block,"VAR",Blockly.Python.ORDER_ATOMIC)||"NULL")+", 2)",Blockly.Python.ORDER_ATOMIC]},Blockly.Blocks.neopixel_colour={init:function(){this.setColour(208),this.appendDummyInput().appendField("NeoPixel color:").appendField(new Blockly.FieldColour("#ff0000"),"COLOUR"),this.setOutput(!0,"NeoPixelColor");var thisBlock=this;this.setTooltip(function(){return"Define for an element this color "+thisBlock.getFieldValue("COLOUR")})}},Blockly.Python.neopixel_colour=function(block){var colour=block.getFieldValue("COLOUR"),result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(colour),r=parseInt(result[1],16);return["("+parseInt(result[2],16)+", "+r+", "+parseInt(result[3],16)+")",Blockly.Python.ORDER_ATOMIC]},Blockly.Blocks.neopixel_colour_rgb={init:function(){this.setColour(208),this.appendDummyInput().appendField("NeoPixel color"),this.appendValueInput("R").setCheck("Number").appendField("Red"),this.appendValueInput("G").setCheck("Number").appendField("Green"),this.appendValueInput("B").setCheck("Number").appendField("Blue"),this.setInputsInline(!0),this.setOutput(!0,"NeoPixelColor");var thisBlock=this;this.setTooltip(function(){return"Define for an element this color ("+thisBlock.getFieldValue("R")+", "+thisBlock.getFieldValue("G")+", "+thisBlock.getFieldValue("B")+")"})}},Blockly.Python.neopixel_colour_rgb=function(block){var r=Blockly.Python.valueToCode(block,"R",Blockly.Python.ORDER_ATOMIC)||"0";return["("+(Blockly.Python.valueToCode(block,"G",Blockly.Python.ORDER_ATOMIC)||"0")+", "+r+", "+(Blockly.Python.valueToCode(block,"B",Blockly.Python.ORDER_ATOMIC)||"0")+")",Blockly.Python.ORDER_ATOMIC]},Blockly.Blocks.neopixel_write={init:function(){this.setColour(208),this.appendDummyInput().appendField("write").appendField(new Blockly.FieldVariable("np"),"VAR").appendField("data"),this.setPreviousStatement(!0),this.setNextStatement(!0);var thisBlock=this;this.setTooltip(function(){return"Write the NeoPixel data from "+thisBlock.getFieldValue("VAR")})}},Blockly.Python.neopixel_write=function(block){return Blockly.Python.variableDB_.getName(block.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+".write()\n"},Blockly.Blocks.servo_object={init:function(){this.setColour(208),this.appendValueInput("VAR").setCheck("MachinePin").appendField("create Servo on"),this.setOutput(!0,"Servo"),this.setTooltip(function(){return"Create a Servo object which is conntected to the given pin."})}},Blockly.Python.servo_object=function(block){return Blockly.Python.definitions_.import_servo="from hs_servo import HSServo as HSServo",["HSServo("+(Blockly.Python.valueToCode(block,"VAR",Blockly.Python.ORDER_ATOMIC)||"NULL")+")",Blockly.Python.ORDER_ATOMIC]},Blockly.Blocks.servo_write_angle={init:function(){this.setColour(208),this.appendDummyInput().appendField("Set").appendField(new Blockly.FieldVariable("servo"),"VAR"),this.appendValueInput("Angle").setCheck("Number").appendField("angle"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0);var thisBlock=this;this.setTooltip(function(){return"Set the servo angle on pin "+thisBlock.getFieldValue("VAR")})}},Blockly.Python.servo_write_angle=function(block){return Blockly.Python.variableDB_.getName(block.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+".write_angle("+(Blockly.Python.valueToCode(block,"Angle",Blockly.Python.ORDER_ATOMIC)||"0")+")\n"},Blockly.Blocks.servo_write_us={init:function(){this.setColour(208),this.appendDummyInput().appendField("Set").appendField(new Blockly.FieldVariable("servo"),"VAR"),this.appendValueInput("Time").setCheck("Number").appendField("us"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0);var thisBlock=this;this.setTooltip(function(){return"Set the servo for us on pin "+thisBlock.getFieldValue("VAR")})}},Blockly.Python.servo_write_us=function(block){return Blockly.Python.variableDB_.getName(block.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+".write_us("+(Blockly.Python.valueToCode(block,"Time",Blockly.Python.ORDER_ATOMIC)||"0")+")\n"};var blocklyWorkspace;docReady(function(){var xhttp=new XMLHttpRequest;xhttp.onreadystatechange=function(){if(4==this.readyState)if(200==this.status){document.getElementById("blocklyArea");var blocklyDiv=document.getElementById("blocklyDiv");blocklyWorkspace=Blockly.inject(blocklyDiv,{toolbox:this.responseText}),window.addEventListener("resize",onResize,!1),onResize(),Blockly.svgResize(blocklyWorkspace),blocklyWorkspace.addChangeListener(udpateCode)}else alert("Could not load the blockly toolbox!")},xhttp.open("GET","xml/toolbox.xml",!1),xhttp.send()}),window.onclick=function(event){loadDialog=document.getElementById("loadDialog"),event.target==loadDialog&&closeLoadDialog(),consoleLogDialog=document.getElementById("consoleLogDialog"),event.target==consoleLogDialog&&closeConsoleLogDialog()},docReady(function(){document.getElementById("fileinput").addEventListener("change",function(e){var fileName="";(fileName=this.files&&this.files.length>1?(this.getAttribute("data-multiple-caption")||"").replace("{count}",this.files.length):e.target.value.split("\\").pop())&&(document.getElementById("fileLabel").querySelector("span").innerHTML=fileName)})}),window.onclick=function(event){loadDialog=document.getElementById("loadDialog"),event.target==loadDialog&&closeLoadDialog(),consoleLogDialog=document.getElementById("consoleLogDialog"),event.target==consoleLogDialog&&closeConsoleLogDialog()};